id: turboseti_find_et
label: DopplerFinder
category: '[turboSETI]'

#  Make one 'parameters' list entry for every Parameter you want settable from the GUI.
#     Sub-entries of dictionary:
#     * id (makes the value accessible as \$keyname, e.g. in the make entry)
#     * label
#     * dtype
parameters:
# - id: filename
#   label: File name
#   dtype: string
- id: out_dir
  label: Output directory
  dtype: string
  default: './'
- id: source_name
  label: Source name
  dtype: string
  category: Source
- id: src_raj
  label: RA (decimal hrs)
  dtype: float
  category: Source
- id: src_dej
  label: Dec (decimal deg)
  dtype: float
  category: Source
#- id: tstart
#  label: Observation start time
#  dtype: float
- id: tsamp
  label: Time step (s)
  dtype: float
- id: f_start
  label: Initial freq (MHz)
  dtype: float
- id: f_stop
  label: Final freq (MHz)
  dtype: float
- id: coarse_chan
  label: Coarse channel no.
  dtype: int
  default: '0'
  category: Channels
- id: n_coarse_chan
  label: No. of coarse channels
  dtype: int
  default: '1'
  category: Channels
- id: n_fine_chans
  label: No. of fine channels
  dtype: int
  category: Channels
- id: log_level_int
  label: Log level int
  dtype: int
  default: '1'
  category: Misc
- id: n_ints_in_file
  label: No. of integrations in file
  dtype: int
- id: min_drift
  label: Min drift rate
  dtype: float
  default: '0.00001'
- id: max_drift
  label: Max drift rate
  dtype: float
  default: '4.0'
- id: snr
  label: SNR
  dtype: float
  default: '25.0'
#- id: flagging
#  label: Flagging
#  dtype: bool
#  default: false
#  options: [true, false]
#  option_labels: [True, False]
#- id: obs_info
#  label: Observation info
#  dtype: bool # This cannot be a bool! Figure out how to get GNU Radio to accept None type, or other workaround
#  default: false
#  category: Misc
#- id: append_output
#  label: Append output
#  dtype: bool
#  default: false
#  category: Misc
#  options: [true, false]
#  option_labels: [True, False]
#- id: blank_dc
#  label: Flag blank DC
#  dtype: bool
#  default: true
#  category: Misc
#  options: [true, false]
#  option_labels: [True, False]
#- id: kernels
#  label: Kernels
#  dtype: bool
#  default: false
#  category: Kernels
#- id: gpu_backend
#  label: GPU backend
#  dtype: bool
#  default: false
#  category: Kernels
#  options: [true, false]
#  option_labels: [True, False]
#- id: precision
#  label: Precision
#  dtype: int
#  default: '1'
#  category: Kernels
#- id: gpu_id
#  label: GPU ID
#  dtype: int
#  default: '0'
#  category: Kernels


#  Make one 'inputs' list entry per input. Sub-entries of dictionary:
#      * label (an identifier for the GUI)
#      * domain
#      * dtype
#      * vlen
#      * optional (set to 1 for optional inputs)
inputs:
- label: in
  #domain: stream
  #dtype:
  #vlen: ...
  #optional: 1

#  Make one 'outputs' list entry per output. Sub-entries of dictionary:
#      * label (an identifier for the GUI)
#      * dtype
#      * vlen
#      * optional (set to 1 for optional inputs)
#- label: out
#  domain: message
#  optional: 1 #!-- e.g. int, float, complex, byte, short, xxx_vector, ...--

templates:
  imports: import turboseti
  make: turboseti.find_et(${source_name}, ${src_raj}, ${src_dej},
                        ${tsamp}, ${f_start}, ${f_stop}, ${n_fine_chans},
                        ${n_ints_in_file}, ${log_level_int}, ${coarse_chan}, ${n_coarse_chan},
                        ${min_drift}, ${max_drift}, ${snr}, ${out_dir})
                        # ${flagging}, ${obs_info}, ${append_output}, ${blank_dc},
                        # ${kernels}, ${gpu_backend}, ${precision}, ${gpu_id})
                        # Entirely removed ${filename}, ${tstart} parameters

file_format: 1
